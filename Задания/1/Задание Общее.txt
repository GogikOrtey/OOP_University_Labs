Описать базовый класс СТРОКА.


Обязательные поля класса:
- указатель на char— хранит адрес динамически выделенной памяти для размещения символов строки;
- значение типа int— хранит длину строки.


Обязательные методы должны выполнять следующие действия:
- конструктор без параметров;
- конструктор, принимающий в качестве параметра Си-строку (заканчиваетсянулевым байтом);
- конструктор, принимающий в качестве параметра символ;
- конструктор копирования;
- получение длины строки;
- очистка строки (сделать строку пустой);
- деструктор.


Описать производный от СТРОКА класс СТРОКА_ИДЕНТИФИКАТОР.
Строки данного класса строятся по правилам записи идентификаторов в языке Си могут включать в себя только те символы, которые могут входить в состав С-идентификаторов.
Если исходные данные противоречат правилам записиидентификатора, то создается пустая СТРОКА_ИДЕНТИФИКАТОР.


Обязательные методы:
+ конструктор без параметров;
+ конструктор, принимающий в качестве параметра Си-строку (заканчиваетсянулевым байтом);
+ конструктор, принимающий в качестве параметра символ;
- конструктор копирования;
- перевод всех символов строки в верхний регистр;
- перевод всех символов строки в нижний регистр;
- поиск первого вхождения символа в строку;
- деструктор.


Переопределить следующие операции:
+ сложение (+) — операция конкатенации строк;
- вычитание (–) — из строки (первый операнд) удаляются все символы, входящие в строку, — второй операнд, при этом может получиться пустая строка;
- оператор> — проверка на больше. Строка считается больше другой, если кодсимвола первой строки вi-й позиции (iизменяется от 0 доn–1, гдеn— длинаболее короткой строки) больше кода символа в той же позиции во второй строке,
длины строк могут не совпадать.
- оператор<— проверка на меньше. Строка считается меньше другой, если кодсимвола первой строки вi-й позиции (iизменяется от 0 доn–1, гдеn— длинаболее короткой строки) меньше кода символа в той же позиции кода
символав той же позиции во второй строке, длины строк могут не совпадать


Разработчик вправе вводить любое (с обоснованием необходимости) число дополнительных полей и методов.


Написать тестовую программу, которая:
- динамически выделяет массив указателей на базовый класс (4–6);
- в режиме диалога заполняет этот массив указателями на производные классы, при этом экземпляры производных классов создаются динамически с заданием начальных значений;
- для созданных экземпляров производных классов выполняет проверку всех разработанных методов с выводом исходных данных и результатов на дисплей.

