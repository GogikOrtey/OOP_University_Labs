Основной .cpp:

#include <iostream>
#include <cmath>
#include <time.h>
using namespace std;

#include "Vector.h"

string On(Vector o1, Vector o2) // Это только для того, что бы они красиво выводили "true" или "false", а не 1 или 0.
{
	if (o1 == o2) return "true";
	else return "false";
}

string Off(Vector o1, Vector o2)
{
	if (o1 != o2) return "false";
	else return "true";
}

void main()
{
	setlocale(LC_ALL, "rus");

	cout << "Введите координаты вектора a" << endl;
	Vector a(true);
	cout << endl;
	cout << "a: "; a.info();
	cout << endl;

	cout << "Введите координаты вектора b" << endl;
	Vector b(true);
	cout << endl;
	cout << "b: "; b.info();
	cout << endl;

	cout << "Введите координаты вектора c" << endl;
	Vector c(true);
	cout << endl;
	cout << "c: "; c.info();
	cout << endl;
	
	cout << endl;

	cout << "a == b " << On(a, b) << endl;
	cout << "a == c " << On(a, c) << endl;
	cout << "b == c " << On(b, c) << endl;

	cout << endl;

	cout << "a != b " << Off(a, b) << endl;
	cout << "a != c " << Off(a, c) << endl;
	cout << "b != c " << Off(b, c) << endl;

	cout << endl;
}

-----------------------------------------------------------

Класс Vector.h:

#pragma once
class Vector
{
private:
	int x1 = 0;
	int y1 = 0;
	int x2 = 0;
	int y2 = 0;

public:
	Vector();
	Vector(float x1, float y1, float x2, float y2);
	Vector(bool l);
	void info();

	friend bool operator==(const Vector& a, const Vector& b);
	friend bool operator!=(const Vector& a, const Vector& b);
};

-----------------------------------------------------------

.cpp для класса:

#include "Vector.h"
#include <iostream>
#include <cmath>
#include <time.h>
using namespace std;

Vector::Vector() {}

Vector::Vector(float x1, float y1, float x2, float y2)
{
	this->x1 = x1;
	this->x2 = x2;
	this->y1 = y1;
	this->y2 = y2;
}

Vector::Vector(bool l) // Конструктор, для инициализации нового значения вектора, вводом с консоли, от пользователя
{
	int x1, x2, y1, y2;

	cout << "x1 = ";
	cin >> x1;
	cout << "x2 = ";
	cin >> x2;
	cout << "y1 = ";
	cin >> y1;
	cout << "y2 = ";
	cin >> y2;

	this->x1 = x1;
	this->x2 = x2;
	this->y1 = y1;
	this->y2 = y2;
}

void Vector::info()
{
	cout << "Вектор идёт из точки (" << this->x1 << "," << this->y1 << "), в точку (" << this->x2 << "," << this->y2 << ")" << endl;
	float l1 = x2 - x1;
	float l2 = y2 - y1;
	float l = sqrt(l1 * l1 + l2 * l2);
	cout << "Длинна вектора = " << l << endl;
}

bool operator==(const Vector& a, const Vector& b)
{
	float l1 = a.x2 - a.x1;
	float l2 = a.y2 - a.y1;
	float al = sqrt(l1 * l1 + l2 * l2);

	l1 = b.x2 - b.x1;
	l2 = b.y2 - b.y1;
	float bl = sqrt(l1 * l1 + l2 * l2);

	if (al == bl)	return true;
	else return false;
}

bool operator!=(const Vector& a, const Vector& b)
{
	float l1 = a.x2 - a.x1;
	float l2 = a.y2 - a.y1;
	float al = sqrt(l1 * l1 + l2 * l2);

	l1 = b.x2 - b.x1;
	l2 = b.y2 - b.y1;
	float bl = sqrt(l1 * l1 + l2 * l2);

	if (al == bl)	return true;
	else return false;
}
